# -*- coding: utf-8 -*-
"""Students Performace in Exams.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FMvk8UN3RGMallG-s4Ode2M9THACHT7C

# **Students Performance in Exams**
Gabriel Felipe Machado de Oliveira, 2022

# **1. Informa√ß√µes do dataset**

## 1.1. Extra√ß√£o
O dataset utilizado no presente estudo foi extra√≠do da plataforma Kaggle (https://www.kaggle.com/datasets/whenamancodes/students-performance-in-exams).

## 1.2. Defini√ß√µes e vari√°veis
A base de dados traz informa√ß√µes do desempenho de estudantes em uma avalia√ß√£o a fim de se analisar seus desempenhos em tr√™s principais compet√™ncias: c√°lculo matem√°tico; leitura; e escrita. Como ferramenta de mensura√ß√£o foi utilizado um score do teste para cada uma das compet√™ncias consideradas. O dataset basicamente busca a resposta para quest√µes do tipo:
- Qu√£o eficaz √© o curso de prepara√ß√£o para o teste?
- Quais os principais fatores que contribuem para os resultados dos testes?
- Qual seria a melhor maneira de melhorar as notas dos alunos em cada teste?
- Que padr√µes e intera√ß√µes nos dados voc√™ pode encontrar

Vale ressaltar que trata-se de uma base de dados fict√≠cia de estudantes. Para o link gerador da base siga: http://roycekimmons.com/tools/generated_data/exams

## 1.3. Vari√°veis
As colunas da base e suas respectivas explica√ß√µes seguem abaixo:
- gender: g√™nero do participante;
- race/ethnicity: grupos de ra√ßas/etinias;
- parental level of education: n√≠vel de escolaridade dos pais;
- lunch: informa√ß√µes da alimenta√ß√£o do candidato;
- test preparation course: se o participante concluiu ou n√£o o curso preparat√≥rio do exame;
- math score: pontua√ß√£o de matem√°tica do estudante;
- reading score: pontua√ß√£o de leitura do estudante;
- writing score: pontua√ß√£o de escrita na escrita.

## 1.4. Tamanho do dataset
O dataset utilizado possui um total de 8 colunas e 1000 linhas.

# **2. Objetivos**

##2.1. Introdu√ß√£o
O objetivo principal do estudo √©, atrav√©s de m√©todos estat√≠sticos, analisar correla√ß√µes entre vari√°veis explicativas e as vari√°veis respotas (scores). O modelos estat√≠sticos utilizados ser√£o especificados conforme o avan√ßo do estudo e o n√≠vel de signific√¢ncia para todos testes ser√° de 5% ($Œ± = 0.05$). Ser√£o utilizados testes de hip√≥teses a fim de responder peguntas previamente realizadas.

## 2.2. T√≥pico de abordagem
Como guia para o estudo, utilizei uma pergunta provocativa, sendo ela:
- Estudantes de g√™nero masculinos possuem scores maiores em matem√°tica que estudantes do g√™nero feminino?

# **3. Extra√ß√£o e Limpeza da Base de Dados**
Etapa pr√°tica introdut√≥ria voltada para limpeza e adequa√ß√£o dos dados.
"""

#Extra√ß√£o de bibliotecas
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import statistics as sts

#Extra√ß√£o dos dados e visualiza√ß√£o
data = pd.read_csv('exams.csv')
data.head(10)

#An√°lise dos tipos de dados
data.info()

"""H√° 5 vari√°veis categ√≥ricas e 3 num√©ricas inteiras."""

#Bucando valores nulos
data.isnull()

#Buscando valores vazios
data.isna()

"""Como visto, os dados est√£o prontos para serem analisados. N√£o h√° valores vazios ou nulos.

# **4. An√°lise das vari√°veis quantitativas**
A fim de eventualmente fazer suposi√ß√µes sobre os par√¢metros da popula√ß√£o, o teste da normalidade das vari√°veis quantitativas se fez necess√°rio. Trata-se de uma base com 1000 observa√ß√µes (um $n$ suficientemente grande), isto √©, o Teorema Central do Limite garantiria a normalidade. Entretanto, vamos utilizar um Teste de Normalidade n√£o-param√©trico para verificarmos mais afundo se a mostra de notas dos estudantes nas tr√™s compet√™ncias seguem uma distribui√ß√£o Normal.

## 4.1. Variavel: 'math score'

### 4.1.1. Visualiza√ß√£o da amostra

Visualiza√ß√£o da amostra:
"""

plt.xlabel('math score: valores')
plt.ylabel('Frequ√™ncia')
plt.title('Distribui√ß√£o de Frequ√™ncias: math score')
sns.histplot(data=data, x="math score", kde=True)

"""Atrav√©s do plot, analisamos algumas possibilidades da distribui√ß√£o da vari√°vel:
- a vari√°vel segue uma normal com assimetria √† esquerda;
- m√©dia pr√≥ximo de 70.

### 4.1.2. Escolha do Teste e Aplica√ß√£o na Amostra

Temos v√°rias op√ß√µes de Testes N√£o-Param√©tricos que verificam a Normalidade. Vamos optar por usar o Shapiro-Wilk. Al√©m desse ser poderoso para tal verifica√ß√£o, nossa base satisfaz seus pr√© requisitos.

Instala√ß√£o das bibliotecas:
"""

!pip install scipy

!pip install statsmodels

from scipy import stats
import scipy

"""Aplica√ß√£o do teste:"""

x = data['math score']
shapiro_test = stats.shapiro(x)
print('*** RESULTADO - VARI√ÅVEL: MATH SCORE ***')
print(shapiro_test)

"""### 4.1.3. Decis√£o

Temos que $p-valor < Œ± = 0.05$. Ou seja, ao n√≠vel de confian√ßa de 0.05 a amostra nos fornece evid√™ncias que os dados seguem uma distribui√ß√£o normal provada pelo m√©todo de Shapiro-Wilk.

## 4.2. Vari√°vel: "reading score"

### 4.2.1. Visualiza√ß√£o dos dados
"""

plt.xlabel('reading score: valores')
plt.ylabel('Frequ√™ncia')
plt.title('Distribui√ß√£o de Frequ√™ncias: reading score')
sns.histplot(data=data, x="reading score", kde=True)

"""Algumas possibilidade e considera√ß√µes podem ser tiradas da vari√°vel "reading score", segue:
- possivelmente trata-se de uma distribui√ß√£o normal com assimetria √† esquerda;
- a m√©dia √© pr√≥xima de 70.

###4.2.2. Aplica√ß√£o do Teste na Amostra
"""

x = data['reading score']
shapiro_test = stats.shapiro(x)
print('*** RESULTADO - VARI√ÅVEL: READING SCORE ***')
print(shapiro_test)

"""### 4.2.3. Decis√£o
Com um $p-valor = 0.00012 < ùõÇ = 0.05$, conclu√≠mos que ao n√≠vel de signific√¢ncia de 5%, os dados nos d√£o evid√™ncias de que a vari√°vel "reading score" segue uma distribui√ß√£o Normal baseada no teste de Shapiro-Wilk.

## 4.3. Variavel: "writing score"

### 4.3.1. Visualiza√ß√£o dos Dados
"""

plt.xlabel('writing score: valores')
plt.ylabel('Freq√™ncia')
plt.title('Distribui√ß√£o de Frequ√™ncias: writing score')
sns.histplot(data=data, x="writing score", kde=True)

"""Arav√©s da visualiza√ß√£o, podemos supor poss√≠veis infr√™ncias:
- trata-se de uma vari√°vel com distribui√ß√£o Normal com assimetria √† esquerda;
- m√©dia pr√≥ximo de 65.

### 4.3.2. Aplica√ß√£o do Teste na Amostra
"""

x = data['writing score']
shapiro_test = stats.shapiro(x)
print('*** RESULTADO - VARI√ÅVEL: WRITING SCORE ***')
print(shapiro_test)

"""###4.3.3. Decis√£o
Com um $p-valor = 0.00012 < ùõÇ = 0.05$, conclu√≠mos que ao n√≠vel de signific√¢ncia de 5%, os dados nos d√£o evid√™ncias de que a vari√°vel "wiriting score" segue uma distribui√ß√£o Normal baseada no teste de Shapiro-Wilk.

#5.Intervalos de Confian√ßa para Œº
Antes de abordarmos testes de hip√≥teses, um t√≥pico importante para investiga√ß√£o, seria o intervalo de confian√ßa para a m√©dia pupulacional $Œº$. Perceba que possuimos apenas os valores dos scores de cada estudantes colhidos para a pesquisa, isto √©, apenas valores amostrais. Utilizando do Intervalo de confian√ßa, estimamos $Œº$ e atribu√≠mos pra ele um intervalo num√©rico confi√°vel.

Contexto e metodologia: 
- Possu√≠mos em m√£os uma amostra com 1000 observa√ß√µes e j√° testamos se ela pode ou n√£o ser descrita com uma distribui√ß√£o Normal (ver t√≥pico 4), assim utilizaremos o teste Z para calcular o Intervalo de Confian√ßa;
- Temos um desvio padr√£o desconhecido ($ùúé$ desconhecido), utilizaremos o estimador $s$ para o c√°lculo;
- Para todos os Intervalos de Confian√ßa, usaremos um n√≠vel de confian√ßa de 95% ($Œ≤ = 1 - Œ± = 0.95$)

## 5.1. Vari√°vel: "math score"

Estat√≠sticas da amostra:
"""

x_barra = np.mean(data['math score'])
s = np.std(data['math score'])
n = data.shape[0]
zalpha = abs(scipy.stats.norm.ppf((1 - 0.95)/2.))
print('*Informa√ß√µes da Amostra*')
print(f'x_barra = {round(x_barra,4)}; s = {round(s,4)}; n = {n}; zalpha = {round(zalpha,4)}')

"""C√°lculo do limite inferior do I.C.:"""

zalpha = abs(scipy.stats.norm.ppf((1 - 0.95)/2.))

LI = x_barra - zalpha*(s/(n**(1/2)))
print('Limite inferior:', round(LI,4))

"""C√°lculo do Limite superior do I.C.:"""

LS = x_barra + zalpha*(s/(n**(1/2)))
print('Limite superior:', round(LS,4))

"""Assim chegamos a conclus√£o de que um Intervalo de Confian√ßa para a m√©dia populacional da vari√°vel "math score" com $Œ≤ = 0.95$ ser√° de:

$$
IC(Œº,\,\, 0.95,\,\, ''math\,\, score'') = (65.4418; 67.3502)
$$

## 5.2. Vari√°vel: "reading score"
Estat√≠sticas da amostra:
"""

x_barra = np.mean(data['reading score'])
s = np.std(data['reading score'])
n = data.shape[0]
zalpha = abs(scipy.stats.norm.ppf((1 - 0.95)/2.))
print('*Informa√ß√µes da Amostra*')
print(f'x_barra = {round(x_barra,4)}; s = {round(s,4)}; n = {n}; zalpha = {round(zalpha,4)}')

"""Calculando o Limite Inferior:"""

LI = x_barra - (zalpha * (s/(n**(1/2))))
print(f'Limite inferior: {round(LI,4)}')

"""Calculando o Limite Superior:"""

LS = x_barra + (zalpha +(s/(n**(1/2))))
print(f'Limite superior: {round(LS, 4)}')

"""Chegamos a conclus√£o de que um Intervalo de Confian√ßa para a m√©dia populacional da vari√°vel "reading score" com $Œ≤ = 0.95$ ser√° de:

$$
IC(Œº,\,\, 0.95,\,\, ''reading\,\, score'') = (68.089; 71.4278)
$$

##5.3. Vari√°vel: "writing score"
C√°lculo das estat√≠sticas:
"""

x_barra = np.mean(data['writing score'])
s = np.std(data['writing score'])
n = data.shape[0]
zalpha = abs(scipy.stats.norm.ppf((1 - 0.95)/2.))
print('*Informa√ß√µes da Amostra*')
print(f'x_barra = {round(x_barra,4)}; s = {round(s,4)}; n = {n}; zalpha = {round(zalpha,4)}')

"""C√°lculo do limite inferior e do limite superior:"""

LI = x_barra - (zalpha*(s/(n**(1/2))))
LS = x_barra + (zalpha*(s/(n**(1/2))))

print(f'Limite inferior: {round(LI,4)}')
print(f'Limite superior: {round(LS,4)}')

"""Assim, chegamos que o Intervalo de Confian√ßa para a m√©dia populacional da vari√°vel "writing score" considerando $Œ≤ = 0.95$ ser√° de:

$$
IC(Œº,\,\, 0.95,\,\, ''writing\,\, score'') = (66.7715; 68.7045)
$$

# 6.An√°lise Gr√°fica das Correla√ß√µes

Al√©m de verificarmos a normalidade das vari√°veis quantitativas, podemos tamb√©m analisar suas correle√ß√µes. Para isso, geraremos uma matriz de correla√ß√µes:
"""

data.corr()

"""Perceba, que a matriz , de maneira expl√≠cita, diz muito pouco sobre as correla√ß√µes. Colocando-a em um mapa de calor conseguimos analisar mais afundo:"""

heatmap = sns.heatmap(data.corr(), vmin=-1, vmax=1, annot = True)

"""Agora, com uma visualiza√ß√£o gr√°fica, podemos inferir ideias claras acerca das correla√ß√µes:
- a correl√ß√£o da pontua√ß√£o de escrita e leitura √© alta, isto √©, estudantes que l√™em bem tamb√©m escrevem bem e vice-versa;
- embora a correla√ß√£o da pontua√ß√£o no teste de matem√°tica com o teste de leitura e escrita seja menor que entre os dois √∫ltimos, h√° um alta taxa de correl√ß√£o entre as tr√™s compet√™ncias.

#7.Testes de Hip√≥teses

Como especificado no in√≠cio do estudo, nosso Teste de Hip√≥tese ser√° voltado √† um t√≥pico espec√≠fico, sendo ele:
*Estudantes de g√™nero masculino possuem scores em matem√°tica maiores que estudantes do g√™nero feminino?*

## 7.1. T√≥pico 1
**Estudantes de g√™nero masculino possuem scores maiores que estudantes de g√™nero feminino em matem√°tica.**

### 7.1.1. Formula√ß√£o das Hip√≥teses
Intepretando o t√≥pico e relambrando os tipos de testes que possu√≠mos, chegamos a conclus√£o inical de que trata-se de um teste de hip√≥tese unilateral √† direita. Vamos tartar o t√≥pico como um problema de desigualdade, isto √©, vamos testar a igualdade das m√©dias dos dois p√∫blicos (masculino e feminino) da vari√°vel "math score" com $Œ±  =0.05$.

Sele√ß√£o das amostras:
"""

data_m = data[data['gender'] == 'male'] #Amostra apenas com p√∫blico masculino
data_f = data[data['gender'] == 'female'] #Amostra apenas com p√∫blico feminino

"""Considerando as seguintes nota√ß√µes:
- $Œº_f:m√©dia \,\, populacional \,\, da \,\, vari√°vel \,\, ''math\,\, score''\,\, do \,\, sexo\,\, masculino$
- $Œº_m: m√©dia \,\, populacional \,\, da \,\, vari√°vel \,\, ''math\,\, score''\,\, do \,\, sexo\,\, feminino$
"""

x_barra_f = np.mean(data_f['math score'])
x_barra_m = np.mean(data_m['math score'])
s_f = np.std(data_f['math score'])
s_m = np.std(data_m['math score'])
print('M√©dias amostrais:',x_barra_m, x_barra_f)
print('Desvios amostrais:', s_m, s_f)

"""Segue que:

$$
\hat{Œº}_f 	\approx 63.1967 = \bar{x}_f
$$
$$
\\\hat{Œº}_m 	\approx 69.3849 = \bar{x}_m
$$

Construindo a Hip√≥tese nula, temos que a m√©dia dos scores do p√∫blimo masculino em matem√°tica √© menor ou igual a m√©dia dos scores do p√∫blico feminino em matem√°tica, manipulando essa rela√ß√£o, chegamos em:

$$
H_0: \mu_m \le \mu_f \,\, \Leftrightarrow\,\,  \mu_m - \mu_f \le 0
$$

Para a hip√≥tese alternativa, temos a nega√ß√£o de $H_0$.

$$
H_1: Œº_m > Œº_f \,\,\Leftrightarrow\,\, Œº_m - Œº_f > 0
$$

Sumarizando:

$$
H_0: \mu_m - \mu_f \le 0\\
$$
$$
H_1: Œº_m - Œº_f > 0
$$

### 7.1.2. Valor Cr√≠tico
Precisamos agora consultar nosso valor cr√≠tico com base na distribui√ß√£o Normal e tendo em vista que trata-se de um teste unilateral √† direita com um n√≠vel de siginific√¢ncia de 5%:

$$
     \text{N√≠vel de signific√¢ncia} = Œ± = 0.05 
$$

Logo, basta consultarmos o valor tabelado:
"""

z_alpha = norm.ppf(0.95)
z_alpha

"""Ou seja:

$$
z_Œ± 	\approx 1.6449
$$

###7.1.3. Estat√≠stica de teste

Antes de tomarmos uma decis√£o, resta-nos calcularmos a estat√≠stica de teste pela express√£o:

$$
\text{z-teste} = \frac{(\bar{x}_m - \bar{x}_m) - (Œº_m - Œº_m)}{œÉ_\bar{x}}
$$

Onde $œÉ_\bar{x}$ √© dado por:

$$
œÉ_\bar{x} = \sqrt{\frac{œÉ^2_m}{n_m} + \frac{œÉ^2_f}{n_f}} 
$$

Perceba que n√£o possu√≠mos $œÉ$, assim usaremos o estimador $s$.
"""

n_m = data_m.shape[0]
n_f = data_f.shape[0]
sigma2_m = (s_m)**2
sigma2_f = (s_f)**2
dif_mu1_mu2 = 0

sigma_xbarra = ((sigma2_m/n_m) + (sigma2_f/n_f))**(1/2)

z_teste = ((x_barra_m - x_barra_f) - dif_mu1_mu2)/sigma_xbarra
print('Valor do z-teste: ', z_teste)

"""Ou seja,

$$
\text{z-teste}‚âà6.4728 > z_Œ± \,\, \Rightarrow \,\, \text{rejeita}\,\,H_0
$$

### 7.1.4. p-valor e decis√£o
poder√≠amos utilizar o p-valor para tomar nossa decis√£o, observe:

$$
\text{p-valor} = P(Z > \text{z-teste}) = P(Z>0.4728) ‚âà 0\\ 
$$
$$
\therefore\,\, p-valor < Œ± \,\,\Rightarrow\,\, \text{rejeita }H_0 
$$

Decis√£o: Ao n√≠vel de siginific√¢ncia de 5% os dados nos d√£o evid√™ncias de que h√° uma desigualdade clara entre os escores de matem√°tica entre o p√∫bico masculino e o p√∫blico feminino, na qual os homens se sa√≠ram melhor na compet√™ncia.

De fato, vejamos graficamente:
"""

fig = plt.figure(figsize=(8, 6))
plt.xlabel('math score: valores')
plt.ylabel('Frequ√™ncia')
plt.title('Distribui√ß√£o de Frequ√™ncias por G√™nero: "math score"')
sns.histplot(data=data_f, x="math score", kde=True, color='pink', element = 'step')
sns.histplot(data=data_m, x="math score", kde=True, color='lightblue', element = 'step')
plt.legend(labels=["Feminino","Masculino"])

"""#8.Conclus√£o
Embora o estudo tenha sido baseado em uma base de dados fict√≠cia, fica evidente o poder de ferramenta estat√≠sticas para a solu√ß√£o de problemas do mundo real. Utilizando dois testes de hip√≥tese,  n√£o-param√©trico e param√©trico, respectivamente, chegamos em conclus√µes espec√≠ficas acerca da distribui√ß√£o dos dados e de suas m√©dias populacionais. 
"""